name: Singularity Build
on: [push]
jobs:

  build:
    name: Build
    runs-on: ubuntu-18.04
    strategy:
      fail-fast: false
      matrix:
        recipe: ["Singularity", "Singularity.3.6.3"]
    steps:

    - name: Set up Go 1.12
      uses: actions/setup-go@v1
      with:
        go-version: 1.12
      id: go

    - name: Install Dependencies
      run: |
        sudo apt-get update && sudo apt-get install -y \
          build-essential \
          libssl-dev \
          uuid-dev \
          libgpgme11-dev \
          squashfs-tools \
          libseccomp-dev \
          pkg-config

    - name: Install Singularity
      env:
        SINGULARITY_VERSION: 3.2.1
        GOPATH: /tmp/go
      run: |
        mkdir -p $GOPATH
        sudo mkdir -p /usr/local/var/singularity/mnt && \
        mkdir -p $GOPATH/src/github.com/sylabs && \
        cd $GOPATH/src/github.com/sylabs && \
        wget -qO- https://github.com/sylabs/singularity/releases/download/v${SINGULARITY_VERSION}/singularity-${SINGULARITY_VERSION}.tar.gz | \
        tar xzv && \
        cd singularity && \
        ./mconfig -p /usr/local && \
        make -C builddir && \
        sudo make -C builddir install          
          
    - name: Check out code for the container build
      uses: actions/checkout@v1

    - name: Build Container
      env:
        SINGULARITY_RECIPE: ${{ matrix.recipe }}
        OUTPUT_CONTAINER: container-${{ matrix.recipe }}.sif
      run: |
       ls 
       if [ -f "${SINGULARITY_RECIPE}" ]; then
            sudo -E singularity build ${OUTPUT_CONTAINER} ${SINGULARITY_RECIPE}
       else
           echo "${SINGULARITY_RECIPE} is not found."
           echo "Present working directory: $PWD"
           ls
       fi
    
    - name: Test
      env:
        SINGULARITY_IMAGE: container-${{ matrix.recipe }}.sif
      run: |
        echo "Using Singularity image: ${SINGULARITY_IMAGE}"
        version () {
          singularity inspect "${SINGULARITY_IMAGE}" | \
            grep "R_VERSION" | \
            awk -F'"' '{print $4}'
        }
        set -e
        set -x
        # Verify R version
        singularity exec ${SINGULARITY_IMAGE} r -q -e "stopifnot(getRversion() == '$(version)')"
        # Load library
        singularity exec R -e "library(tidyverse)"
        { set +x; } 2>/dev/null
        echo "All tests passed!"
